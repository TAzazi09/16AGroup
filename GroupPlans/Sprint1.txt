Group 16A - Sprint 1 Plan

Ethan - I will be creating most of the background code that communicates with the database. I will also create all SQL statements that by the application to communicate with the database. 

_______________________________________________________________________________________________________________________________________
Nikola:
    - Login page GUI
        - username and password fields and a functional log-in button (send info to LoginCheck.java)

    - GeneralPage GUI
        - a 'Hello' message and two buttons, the left button sends back to the login page, and the right button sends to the register page

    - Code quality control
        - author comments at the top of the different files
        - enforce variable declarations to be in the beginning of the code
        - comment monitoring (removing unnecessary auto-generated comments and adding useful ones)
        - impose basic indenting and whitespace practices
        - implement proper project structure (sql files in one folder, views in another, etc.)

    - Coherency between the different pages of our app/website
        - consistent font (including font size), consistent color theme (white and a specific shade of blue), and sime sized windows

_______________________________________________________________________________________________________________________________________
Callum
    Test cases (learn how to do it and then do it)
    - for registration
	I will be testing inputs against desired outcomes, will check that details are tested correctly against registration creating 
	test cases with JUNIT 5. Age will be checked to see if they accept the correct age: Cannot be under 18 and over 120. Phone number 
	follows correct format and only one is accepted. First name and surname must also not exceed 15 characters. Lastly, details 
	shouldn't exceed 100 chracters
    - for log in Will 
    

_______________________________________________________________________________________________________________________________________
Kristian:
    I will be .creating the registration UI and making sure that it inserts new information into the database, i will be doing
    test cases for making sure that no duplicate information is inserted and correct format is also followed with proper error messages
    I will also make a general UI to allow the patient to select wether to login or register and make the corrosponding buttons to open the
    correct UI.

_______________________________________________________________________________________________________________________________________
Tare:
    - more test cases


============================================================================================================================================
Database Design:
The database is a simple one table design, where the table holds the 
details of registered patients. The details included a patientID that
auto increments as more details are added (first patient to register is
 1, second is 2, etc). Other details are First Name, Surname, Age, Date
 Of Birth, Gender, DoctorChosen, Phone Number, Details. The only fields
 that allow null values are Phone Number and Details, since there is a
 chance that the patient doesnï¿½t have access to a phone and would need to
 communicate with the doctors in a different way. No details may be
 needed as well. The database is initialised when the app is launched, so
 when a patient has finished using the app, they will be sent to the 
general page but with the database still intact.
